0:说明
	0.1一些定义：
		代对表：excel文件中的表的名字为"代对表="的表
		导出表：excel文件中表的名字以"@"为前缀的表的集合
		数值：excel中数据的值
		变量(名)：针对程序而言,这个请不要是用中文,python无法使用中文变量名

1:导出表
	 一个excel上会存在多份表， 不一定每张表都是需要导出的， 因此需要这样一个命令标识此表需要导出:

	在表名前面加前缀 "@"
	例如:"@普通任务表"
	该表导出为变量名请在代对表中定义
	导出表的表名需要在代对表中进行代对填写，格式为：
		表名(不含@):变量名(只能为英文)
	例如：
		普通任务表:normalQuest

2:在每张需要导出的表上， 第一行是程序用的属性标签的定义， 还包括一些导出规则, 第2行是策划用的真正的表头， 说明此列数据的用途.

3:第一行程序定义的表头中格式如下:
line1: "ID [.][func]"		"name [][func]"
line2: "技能ID"			"技能名称"

id后面的第一个[]内是导出规则， 第二个则是所使用的转换函数， 这个功能可以让大家写某个特定的函数去转换此列的数据， 这个函数模型如下:
def func_int(data):
	return int(data)

def func_xxx(data):
	x, y = data.split(";")
	return (x, y)

这些函数定义在 functions.py中

4:导出规则定义:
***********注意请使用英文符号，程序未作中文的处理****************
	4.1命令符号 "."
		代表此项必须填写， 如检查到没有填写则报错， 并退出导出, 如果没有定义则随便填不填写，导出到py给个默认值(具体看这列所定义的数据类别)。

	4.2命令符号 "$"
		表示此列数据导出后是需要从对代表中进行数据替代的, 这样就可以让策划用中文填写配置了。代对表第一行为说明，第二行以后为代对关系。
	     代对表每个单元格格式如(物理技能 :BASE_SKILL_TYPE_PHYSICS)

	4.3命令符号 "!"
	   	表示该列数据为所在行的主key，现在主key只能是1个,如需多个key请在            config.py配置EXPORT_KEY_NUMS


5：导出数据格式：
	某Excel文件有导出表(@表1， @表2, ...)
	代对表中有带队关系:
		表1:sheet1
		表2:sheet2
		     ...
	则导出的py文件中存在字典：
	sheet1 = {
		key: {...}, 
		....
	}

	sheet1 = {
		key: {...}, 
		....
	}
	...

	datas = [sheet1, sheet2, ...]

6：备注
	与程序相关的变量名请使用英文
	代对表的第一行不要写代对关系（普通任务表:normalQuest）

7: 类型
整数：funcInt
浮点数：funcFloat
字符串：funcStr
布尔值：funcBool
整数数组：funcTupleInt
浮点数数组：funcTupleFloat
字符串数组：funcTupleStr